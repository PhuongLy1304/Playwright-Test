{
	"info": {
		"_postman_id": "0e014675-94fd-47b0-b908-26fad5fff55f",
		"name": "OnlineShop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33997136"
	},
	"item": [
		{
			"name": "Categories",
			"item": [
				{
					"name": "GET ALL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Reponse time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Reponse must be valid and have a body', function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be array',()=>{\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('array');\r",
									"});\r",
									"pm.test('5.Schema is valid', ()=>{\r",
									"    var Schema={\r",
									"        type:'array',\r",
									"        items:{  \r",
									"            type:'object',\r",
									"            propertise:{\r",
									"                id:{type:\"number\",required:true},\r",
									"                name:{type:\"string\", required:true},\r",
									"                description:{type:[\"string\",\"null\"],required:true},\r",
									"            },\r",
									"            additionalPropertise:false,\r",
									"          },\r",
									"        \r",
									"    }\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.jsonSchema(Schema);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\", required:true},\r",
									"            name:{type:\"string\",required:true},\r",
									"            description:{type:[\"string\",\"null\"], required:true}\r",
									"            \r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Java\",\r\n    \"description\":\"....f\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (NAME IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"            \r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"    pm.expect(jsonData.message).to.include(\"Name must be unique\");\r",
									"    pm.expect(jsonData.error).to.eql(\"Bad Request\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Java\",\r\n    \"description\":\"....f\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (NAME IS REQUIRED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"            \r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"    pm.expect(jsonData.message).to.include(\"Name is required\");\r",
									"    pm.expect(jsonData.error).to.eql(\"Bad Request\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"description\":\"....f\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 200',function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.json must be a object',()=>{\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        propertise:{\r",
									"            id:{type:\"number\",required:true},\r",
									"            name:{type:\"string\",required:true},\r",
									"            description:{type:[\"string\",\"null\"],required:true},\r",
									"        },\r",
									"        additionalPropertise:false,\r",
									"    }\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400', function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body', function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"},required:true},\r",
									"            error:{type:\"string\",required:true},\r",
									"            statusCode:{type:\"number\",required:true}\r",
									"        },\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Valid is correct',function(){\r",
									"    const jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsonData.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/1x",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"1x"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 410',function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body', function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const JsonData=pm.response.json();\r",
									"    pm.expect(JsonData.statusCode).to.eql(410);\r",
									"    pm.expect(JsonData.message).to.include(\"Category not found\");\r",
									"    pm.expect(JsonData.error).to.eql(\"Bad Request\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/400",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"400"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 200',function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test('2.Response times is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            id:{type:\"number\"},\r",
									"            name:{type:\"string\"},\r",
									"            description:{type:[\"string\",\"null\"]}\r",
									"        },\r",
									"        required:[\"id\",\"name\",\"description\"],\r",
									"        additionalProperties:false,\r",
									"    };\r",
									"    const responseJson=pm.response.json();\r",
									"    pm.expect(responseJson).to.be.jsonSchema(Schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"HTML\",\r\n    \"description\":\"mo ta\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\"),\r",
									"    pm.expect(jsondata.statusCode).to.eql(400),\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"HTTP\",\r\n    \"description\":\"mo ta\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE (NAME IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Name must be unique\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Category name 1\",\r\n    \"description\":\"mo ta\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/2",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND))",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body', function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must is a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid', ()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Value is correct',function(){\r",
									"    const jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Name must be unique\");\r",
									"    pm.expect(jsonData.statusCode).to.eql(400);\r",
									"    pm.expect(jsonData.error).to.eql(\"Invalid rote params\");\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"HTTP\",\r\n    \"description\":\"mo ta\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/4000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"4000"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 200', function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must is object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsonDat=pm.response.json();\r",
									"    pm.expect(jsonDat.statusCode).to.eql(200);\r",
									"    \r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400 \",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\", ()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\", function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/2X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"2X"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID(NOT FOUND))",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values í corect\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.statusCode).to.eql(410);\r",
									"    pm.expect(jsondata.message).to.include(\"Category not found\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/categories/400",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"categories",
								"400"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "POST LOGIN",
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"tungnt@softech.vn\",\r\n  \"password\": \"123456789\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/auth/login",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "GET ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be array\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"array\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"array\",\r",
									"        items: {\r",
									"            type: 'object',\r",
									"            properties: \r",
									"            {\r",
									"            id: { type: 'integer' },\r",
									"            firstName: { type: 'string' },\r",
									"            lastName: { type: 'string' },\r",
									"            phoneNumber: { type: 'string' },\r",
									"            address: { type: 'string' },\r",
									"            birthday: { type: 'string', format: 'date' },\r",
									"            email: { type: 'string', format: 'email' },\r",
									"            },\r",
									"            required: ['id', 'firstName', 'lastName', 'phoneNumber'],\r",
									"           \r",
									"        }, additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200 or 201\",function(){\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"\r",
									"            id:{type:\"number\", required:true},\r",
									"            firstname:{type:\"string\", required:true},\r",
									"            lastname:{type:\"string\",required:true},\r",
									"            phoneNumber:{type:[\"string\",\"null\"],required:true},\r",
									"            address:{type:\"string\",required:true},\r",
									"            birthday:{type:\"string\",required:true},\r",
									"            email:{type:\"sring\",required:true}\r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":\"0842538226\",\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":\"tung12042nt@softec.vn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (PHONE AND EMAIL IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Email must be unique\",\"Phone Number must be unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":\"0842538226\",\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":\"tung12042nt@softec.vn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (PHONE AND EMAIL IS REQUIRED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"email should not be empty\",\"phone should not be empty\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":null,\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (PHONE IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Phone Number must be unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":\"0842538226\",\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":\"tung124nt@softec.vn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (PHONE IS REQUIRED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Phone Number must be unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":null,\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":\"tung108nt@softec.vn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (EMAIL IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Email must be unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":\"08425382246\",\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":\"tung12042nt@softec.vn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (EMAIL IS REQUIRED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            statusCode:{type:\"number\"},\r",
									"            error:{type:\"string\"}\r",
									"\r",
									"          \r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include( \"email should not be empty\",\r",
									"        \"email must be an email\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQyNzYwMDEsImV4cCI6MTc0NTgzMzYwMX0.sqMiBuKWsK9ZdfSR-aACheFVafUWK9LZuWhW_dQMEYE",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"j\",\r\n    \"lastName\":\"h\",\r\n    \"phoneNumber\":\"08428538226\",\r\n    \"address\":\"38 yen bai, da nang, VN1\",\r\n    \"birthday\":\"2021-02-31\",\r\n    \"email\":null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valis and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\",required:true},\r",
									"            firstname:{type:\"string\",required:true},\r",
									"            lastname:{tyep:\"string\",required:true},\r",
									"            phoneNumber:{type:[\"string\",\"number\"],required:true},\r",
									"            address:{type:\"string\",required:true},\r",
									"            birthday:{type:\"string\",required:true},\r",
									"            email:{type:\"string\",required:true}\r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Resposne time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"        \r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Resposne time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"        \r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/100000000000000000000000000000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"100000000000000000000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"})\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\",required:true},\r",
									"            firstname:{type:\"string\",required:true},\r",
									"            lastname:{tyep:\"string\",required:true},\r",
									"            phoneNumber:{type:[\"string\",\"number\"],required:true},\r",
									"            address:{type:\"string\",required:true},\r",
									"            birthday:{type:\"string\",required:true},\r",
									"            email:{type:\"string\",required:true}\r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"firstName\": \"Sản phẩm update\",\r\n    \"lastName\": \"laptop\",\r\n    \"phoneNumber\": null,\r\n    \"address\": \"500000 Yen Bai, Danang, VN1\",\r\n    \"birthday\": \"2000-11-24\",\r\n    \"email\": \"john111@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\"),\r",
									"    pm.expect(jsondata.statusCode).to.eql(400),\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 410',function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test('2.Response time is less than 200ms', function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body', function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must is a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid', ()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Value is correct',function(){\r",
									"    const jsonData=pm.response.json();\r",
									"    pm.expect(jsonData.message).to.include(\"Customer not found\");\r",
									"    pm.expect(jsonData.statusCode).to.eql(410);\r",
									"    pm.expect(jsonData.error).to.eql(\"Invalid rote params\");\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/100",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"obejct\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"string\",required:true}\r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.eql(\"Customer deleted\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/100",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400 \",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\", ()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\", function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values í corect\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.statusCode).to.eql(410);\r",
									"    pm.expect(jsondata.message).to.include(\"Category not found\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/customers/4282675",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"customers",
								"4282675"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employees",
			"item": [
				{
					"name": "GET ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be array\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"array\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"array\",\r",
									"        items:{\r",
									"            type:\"object\",\r",
									"            properties:{\r",
									"                id:{type:\"integer\"},\r",
									"                firstname:{type:\"string\"},\r",
									"                lastname:{type:\"string\"},\r",
									"                phoneNumber:{type:[\"string\",\"null\"]},\r",
									"                address:{type:\"string\"},\r",
									"                birthday:{type:\"string\",format:\"date\"},\r",
									"                email:{type:\"string\",format:\"email\"}\r",
									"            },\r",
									"            required:[\"id\",\"phoneNumber\"],\r",
									"            additionalProperties:true\r",
									"\r",
									"        }\r",
									"        \r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200 or 201\",function(){\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            firstname:{type:\"string\"},\r",
									"            lastname:{type:\"string\"},\r",
									"            email:{type:\"string\", format:\"email\"},\r",
									"            address:{type:\"string\"},\r",
									"            phoneNumber:{type:[\"string\",\"null\"]},\r",
									"            birthday:{type:\"string\",format:\"date\"}\r",
									"        },\r",
									"        required:[\"id\",\"phoneNumber\"],\r",
									"        additionalProperties:true\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"John\",\r\n    \"lastName\":\"Doeeli\",\r\n    \"email\":\"johh@gamil.com\",\r\n    \"address\":\"yen bai\",\r\n    \"phoneNumber\":\"097088488\",\r\n    \"birthday\":\"1990-12-3\"\r\n    \r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Employee is unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"John\",\r\n    \"lastName\":\"Doeeli\",\r\n    \"email\":\"johh@gamil.com\",\r\n    \"address\":\"yen bai\",\r\n    \"phoneNumber\":\"097088488\",\r\n    \"birthday\":\"1990-12-3\"\r\n    \r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE NEW (DUPLICATED) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Employee is unique\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\":\"John\",\r\n    \"lastName\":\"Doeeli\",\r\n    \"email\":\"johh25@gamil.com\",\r\n    \"address\":\"yen bai\",\r\n    \"phoneNumber\":\"097088488\",\r\n    \"birthday\":\"1990-12-3\"\r\n    \r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"       \r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"integer\"},\r",
									"            firstname:{type:\"string\"},\r",
									"            lastname:{type:\"string\"},\r",
									"            phoneNumber:{type:[\"string\",\"null\"]},\r",
									"            address:{type:\"string\"},\r",
									"            birthday:{type:\"string\",format:\"date\"},\r",
									"            email:{type:\"string\",format:\"email\"}\r",
									"        },\r",
									"        required:[\"id\",\"phoneNumber\"],\r",
									"        additionalProperties:true\r",
									"        \r",
									"  \r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/2",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Josn must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\", ()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"validition failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/2X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"2X"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Josn must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\", ()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"validition failed\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(410);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/25000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"25000"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\"},\r",
									"            firstname:{type:\"string\"},\r",
									"            lastname:{type:\"string\"},\r",
									"            phoneNumber:{type:\"string\"},\r",
									"            address:{type:\"string\"},\r",
									"            birthday:{type:\"string\",format:\"date\"},\r",
									"            email:{type:\"string\",format:\"email\"}\r",
									"        },\r",
									"        required:[\"id\",\"phoneNumber\"],\r",
									"        additionalProperties:true\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Phuong\",\r\n  \"lastName\": \"ly\",\r\n  \"email\": \"ly@gmail.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"Da Nang\",\r\n  \"birthday\": \"2003-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/2",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Phuong\",\r\n  \"lastName\": \"ly\",\r\n  \"email\": \"ly@gmail.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"Da Nang\",\r\n  \"birthday\": \"2003-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/2X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"2X"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"   const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(410)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Phuong\",\r\n  \"lastName\": \"ly\",\r\n  \"email\": \"ly@gmail.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"Da Nang\",\r\n  \"birthday\": \"2003-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/207",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"207"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Delete Employee\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/2X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"2X"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"\r",
									"});\r",
									"pm.test(\"Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"obejct\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Can't delete employee\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.exoect(jsondata.statusCode).to.eql(410);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/employees/3000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"employees",
								"3000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "GET ALL",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"createdDate\": \"2024-04-27T09:57:50.629Z\",\r\n  \"shippedDate\": \"2024-04-29T07:12:44.812Z\",\r\n  \"status\": \"WAITING\",\r\n  \"description\": \"string\",\r\n  \"shippingAddress\": \"123 Street, London\",\r\n  \"shippingCity\": \"London\",\r\n  \"paymentType\": \"CASH\",\r\n  \"customerId\": 1,\r\n  \"employeeId\": 1,\r\n  \"orderDetails\": [\r\n    {\r\n      \"orderId\": 1,\r\n      \"productId\": 1,\r\n      \"quantity\": 1,\r\n      \"price\": 0,\r\n      \"discount\": 0\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/106",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"106"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/10X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"10X"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/100",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"100"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"createdDate\": \"2020-01-01\",\r\n  \"shippedDate\": \"2020-01-01\",\r\n  \"shippingAddress\": \"Address 1\",\r\n  \"shippingCity\": \"City 1\",\r\n  \"paymentType\": \"CASH\",\r\n  \"status\": \"WAITING\",\r\n  \"description\": \"Description 1\",\r\n  \"customerId\": 1,\r\n  \"employeeId\": 1,\r\n  \"orderDetails\": [\r\n    {\r\n      \"productId\": 1,\r\n      \"quantity\": 1,\r\n      \"price\": 1,\r\n      \"discount\": 1\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/106",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"106"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"createdDate\": \"2020-01-01\",\r\n  \"shippedDate\": \"2020-01-01\",\r\n  \"shippingAddress\": \"Address 1\",\r\n  \"shippingCity\": \"City 1\",\r\n  \"paymentType\": \"CASH\",\r\n  \"status\": \"WAITING\",\r\n  \"description\": \"Description 1\",\r\n  \"customerId\": 1,\r\n  \"employeeId\": 1,\r\n  \"orderDetails\": [\r\n    {\r\n      \"productId\": 1,\r\n      \"quantity\": 1,\r\n      \"price\": 1,\r\n      \"discount\": 1\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/10V",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"10V"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"createdDate\": \"2020-01-01\",\r\n  \"shippedDate\": \"2020-01-01\",\r\n  \"shippingAddress\": \"Address 1\",\r\n  \"shippingCity\": \"City 1\",\r\n  \"paymentType\": \"CASH\",\r\n  \"status\": \"WAITING\",\r\n  \"description\": \"Description 1\",\r\n  \"customerId\": 1,\r\n  \"employeeId\": 1,\r\n  \"orderDetails\": [\r\n    {\r\n      \"productId\": 1,\r\n      \"quantity\": 1,\r\n      \"price\": 1,\r\n      \"discount\": 1\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/1000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"1000"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/109",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"109"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/10C",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"10C"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/orders/10000000000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"orders",
								"10000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "GET ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\", function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be array\",()=>{\r",
									"    const reaponsejson=pm.response.json();\r",
									"    pm.expect(reaponsejson).to.be.an(\"array\");\r",
									"\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"array\",\r",
									"        items:{\r",
									"            type:\"object\",\r",
									"            properties:{\r",
									"                id:{type:\"number\"},\r",
									"                name:{type:\"string\"},\r",
									"                price:{type:\"number\", minium:0},\r",
									"                discount:{type:\"number\" ,minium:0, maxium:100 },\r",
									"                stock:{type:\"number\"},\r",
									"                description:{type:[\"string\",\"null\"]},\r",
									"                categotyId:{type:\"number\"},\r",
									"                supplierId:{type:\"number\"},\r",
									"                category:{type:\"object\",properties:{\r",
									"                    id:{type:\"number\",required:true},\r",
									"                    name:{type:\"string\",required:true},\r",
									"                    description:{type:[\"string\",\"null\"],required:true}\r",
									"                }},\r",
									"                supplier:{\r",
									"                    type:\"object\",\r",
									"                    properties:{\r",
									"                        id:{type:\"number\",required:true},\r",
									"                        name:{type:\"string\",required:true},\r",
									"                        phoneNumber:{type:\"phoneNumber\",required:true},\r",
									"                        email:{type:[\"string\",\"null\"],required:true},\r",
									"                        address:{type:[\"string\",\"null\"],required:true}\r",
									"                    }\r",
									"                }\r",
									"\r",
									"            },\r",
									"            required:[\"id\",\"name\",\"price\",\"discount\",\"stock\",\"description\",\"categotyId\",\"supplierId\",\"supplier\",\"category\"]\r",
									"            \r",
									"        },\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const resposnejson=pm.response.json();\r",
									"    pm.expect(resposnejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 201\",function(){\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\"},\r",
									"            name:{type:\"string\"},\r",
									"            price:{type:\"number\", minimum:0},\r",
									"            discount:{type:\"number\",minimum:0 , maximum:90},\r",
									"            stock:{type:\"interger\",minimum:0},\r",
									"            desscription:{type:[\"string\",\"null\"]},\r",
									"            categoryId:{type:\"number\"},\r",
									"            supplierId:{type:\"number\"}\r",
									"        },\r",
									"        required: ['id', 'name', 'price', 'stock', 'categoryId', 'supplierId'],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 1\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (NAME IS REQUIRED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include( \"Name must be greater than 1 and less than or equal 100 characters\",\r",
									"        \"Name is required\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": null,\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (PRICE <0)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include( \"Price must be greater than 0\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 31\",\r\n  \"price\": -0.01,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (STOCK <0 )",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Stock must be greater than or equal 0\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 1\",\r\n  \"price\": 1000,\r\n  \"discount\": 10,\r\n  \"stock\": -0.01,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 2,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (PRICE =0)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(  \"Price must be greater than 0\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 1\",\r\n  \"price\":0,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (STOCK =0)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 71\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 0,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (PRICE IS BLANK)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Josn must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        rype:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Price must be greater than 0\",\"Price must be a number\",\"Price is required\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 11\",\r\n  \"price\": null,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (STOCK IS BLANK)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        rype:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Stock must be greater than or equal 0\",\r",
									"        \"Stock must be a number\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"P1\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": null,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (DISCOUNT >90)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is les than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Shema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Discount must be less than or equal to 90\",\r",
									"        \"Discount must be greater than or equal to 0\",\r",
									"        \"Discount must be a number\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"P12\",\r\n  \"price\": 10,\r\n  \"discount\": 91,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 2,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (DISCOUNT <0)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is les than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Shema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\r",
									"        \"Discount must be greater than or equal to 0\"\r",
									"        );\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Laptop11\",\r\n  \"price\": 100,\r\n  \"discount\": -1,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE (DISCOUNT IS BLANK)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is les than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Shema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Discount must be less than or equal to 90\",\r",
									"        \"Discount must be greater than or equal to 0\",\r",
									"        \"Discount must be a number\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 551\",\r\n  \"price\": 100,\r\n  \"discount\": null,\r\n  \"stock\": 100,\r\n  \"description\": \"Description\",\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"})\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\"},\r",
									"            name:{type:\"string\"},\r",
									"            price:{type:\"number\",minimum:0},\r",
									"            discount:{type:\"number\", minimum:0 , maximum:90},\r",
									"            stock:{type:\"integer\",minimum:0},\r",
									"            description:{type:[\"string\",\"null\"]},\r",
									"            categoryId:{type:\"integer\"},\r",
									"            supplierId:{type:\"integer\"},\r",
									"            category:{\r",
									"                type:\"object\",\r",
									"                properties:{\r",
									"                    id:{type:\"number\"},\r",
									"                    name:{type:\"string\"},\r",
									"                    description:{type:[\"string\",\"null\"]}\r",
									"                },\r",
									"                required:[\"id\",\"name\",\"description\"]\r",
									"            },\r",
									"            supplier:{\r",
									"                type:\"object\",\r",
									"                properties:{\r",
									"                    id:{type:\"number\"},\r",
									"                    name:{type:\"string\"},\r",
									"                    phoneNumber:{type:\"string\"},\r",
									"                    email:{type:[\"string\",\"null\"],format:\"email\"},\r",
									"                    address:{type:[\"string\",\"null\"]}\r",
									"\r",
									"                },\r",
									"                required:[\"id\",\"name\",\"phoneNumber\",\"email\",\"address\"]\r",
									"            }\r",
									"        },\r",
									"        required:[\"id\",\"name\",\"price\",\"stock\",\"categoryId\",\"supplierId\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400\",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Josn must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid \",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Josn must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid \",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Product not found\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(410);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1000000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must an object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid \",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            id:{type:\"number\"},\r",
									"            name:{type:\"string\"},\r",
									"            price:{type:\"number\", minimum:0},\r",
									"            discount:{type:\"number\",minimum:0,maximum:90},\r",
									"            stock:{type:\"integer\",minimum:0},\r",
									"            description:{type:[\"string\",\"null\"]},\r",
									"            categoryId:{type:\"integer\"},\r",
									"            supplierid:{type:\"integer\"}\r",
									"        },\r",
									"        required:[\"id\",\"name\",\"price\",\"stock\",\"categoryId\",\"supplierId\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 1\",\r\n  \"description\": \"Product 1 description\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\"),\r",
									"    pm.expect(jsondata.statusCode).to.eql(400),\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Product 1\",\r\n  \"description\": \"Product 1 description\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1X"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE (NAME IS DUPLICATED)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 400',function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Validation failed (numeric string is expected)\"),\r",
									"    pm.expect(jsondata.statusCode).to.eql(400),\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"SSD 256GB\",\r\n  \"description\": \"Product 1 description\",\r\n  \"price\": 1000,\r\n  \"discount\": 20,\r\n  \"stock\": 10,\r\n  \"categoryId\": 2,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/4",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('1.Status code is 410',function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test('2. Response time is less than 200ms',function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test('3.Response must be valid and have to body',function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test('4.Json must be a object',()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an('object');\r",
									"});\r",
									"pm.test('5.Schema is valid',()=>{\r",
									"    var Schema={\r",
									"        type:'object',\r",
									"        properties:{\r",
									"            message:{type:\"array\", items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false,\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test('6.Values is correct',function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include(\"Product not found\"),\r",
									"    pm.expect(jsondata.statusCode).to.eql(410),\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\")\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"177\",\r\n  \"description\": \"Product description\",\r\n  \"price\": 100,\r\n  \"discount\": 10,\r\n  \"stock\": 100,\r\n  \"categoryId\": 1,\r\n  \"supplierId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1000000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}}\r",
									"        },\r",
									"        required:[\"message\"],\r",
									"        additionalPrpeties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.eql(\"Product deleted\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/200",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"200"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 400 \",function(){\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\", function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\", ()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"},\r",
									"            statusCode:{type:\"number\"}\r",
									"        },\r",
									"        required:[\"message\",\"error\",\"statusCode\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values is correct\", function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.message).to.include( \"Validation failed (numeric string is expected)\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Invalid route params\");\r",
									"    pm.expect(jsondata.statusCode).to.eql(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/20V",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"20V"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (NOT FOUND)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 410\",function(){\r",
									"    pm.response.to.have.status(410);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must is object\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"object\");\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"object\",\r",
									"        properties:{\r",
									"            statusCode:{type:\"number\"},\r",
									"            message:{type:\"array\",items:{type:\"string\"}},\r",
									"            error:{type:\"string\"}\r",
									"        },\r",
									"        required:[\"statusCode\",\"message\",\"error\"],\r",
									"        additionalProperties:false\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"});\r",
									"pm.test(\"6.Values í corect\",function(){\r",
									"    const jsondata=pm.response.json();\r",
									"    pm.expect(jsondata.statusCode).to.eql(410);\r",
									"    pm.expect(jsondata.message).to.include(\"Product not found\");\r",
									"    pm.expect(jsondata.error).to.eql(\"Bad Request\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/products/1000000111111",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"products",
								"1000000111111"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "GET ALL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"1.Status code is 200\",function(){\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"2.Response time is less than 200ms\",function(){\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"3.Response must be valid and have to body\",function(){\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"4.Json must be array\",()=>{\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.an(\"array\");\r",
									"});\r",
									"pm.test(\"5.200-2001\",function(){\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
									"});\r",
									"pm.test(\"5.Schema is valid\",()=>{\r",
									"    var Schema={\r",
									"        type:\"array\",\r",
									"        items:{\r",
									"            type:\"object\",\r",
									"            properties:{\r",
									"                id:{type:\"number\"},\r",
									"                name:{type:\"string\"},\r",
									"                phoneNumber:{type:\"string\"},\r",
									"                email:{type:\"string\",format:\"email\"},\r",
									"                address:{type:\"string\"}\r",
									"            },\r",
									"            required:[\"id\",\"name\",\"phoneNumber\",\"email\",\"address\"],\r",
									"            additionalProperties:false\r",
									"        }\r",
									"    }\r",
									"    const responsejson=pm.response.json();\r",
									"    pm.expect(responsejson).to.be.jsonSchema(Schema);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST CREATE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Sony\",\r\n  \"email\": \"contact@sony.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"38 Suziki, Japan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/5991",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"5991"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/59XX",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"59XX"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/6000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"6000"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Sony\",\r\n  \"email\": \"contact@sony.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"38 Suziki, Japan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/5990",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"5990"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Sony\",\r\n  \"email\": \"contact@sony.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"38 Suziki, Japan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/599X",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"599X"
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH UPDATE BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Sony\",\r\n  \"email\": \"contact@sony.com\",\r\n  \"phoneNumber\": \"0905123456\",\r\n  \"address\": \"38 Suziki, Japan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/6000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"6000"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/5990",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"5990"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (INVALID)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/59NN",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"59NN"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE BY ID (NOT FOUND)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTAsInVzZXJuYW1lIjoidHVuZ250QHNvZnRlY2gudm4iLCJlbWFpbCI6InR1bmdudEBzb2Z0ZWNoLnZuIiwic3ViIjoxMCwiYXBwbGljYXRpb24iOiJPbmxpbmUgU2hvcCAtIEFQSSIsInJvbGVzIjpbeyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3JzIn1dLCJpYXQiOjE3MTQzNzMzNTksImV4cCI6MTc0NTkzMDk1OX0.seB0yPr-XqjBdOEK0dm1Jb55DoPSspICLSfJo7DGvYs",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://server.aptech.io/online-shop/suppliers/6000",
							"protocol": "https",
							"host": [
								"server",
								"aptech",
								"io"
							],
							"path": [
								"online-shop",
								"suppliers",
								"6000"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Url",
			"value": "",
			"type": "string"
		}
	]
}